#!/usr/bin/python2.6
"""
Usage:
    update-stack STACK_NAME [options] [PARAMETER...]

Options:
    --region=STRING            aws region to connect to [default: eu-west-1]
    --template=FILENAME or URL

    --warmup-seconds=INT       Seconds to wait for warmup [default: 25]
    --action-timeout=INT       Seconds to wait for the action to finish [default: 300]
    --lenient_look_back=INT    Seconds to look back for events [default: 5]
    --healthy-timeout=SECONDS  Healthy timeout in seconds for instances [default: 600]
"""

import sys
from docopt import docopt

import boto.cloudformation

from aws_updater.stack import StackUpdater

EXIT_CODE_OK = 0
EXIT_CODE_CANNOT_CREATE_STACK = 1
EXIT_CODE_CANNOT_UPDATE_STACK = 2
EXIT_CODE_CANNOT_UPDATE_ASGS = 3
EXIT_CODE_VALIDATEERROR = 10
EXIT_CODE_UNKNOWNPROBLEM = 125

error = None
exit_code = EXIT_CODE_UNKNOWNPROBLEM

arguments = docopt(__doc__)

stack_name = arguments["STACK_NAME"]
template_filename = arguments["--template"]
region = arguments["--region"]
warmup_seconds = int(arguments["--warmup-seconds"])
lenient_look_back = int(arguments["--lenient_look_back"])
action_timeout = int(arguments["--action-timeout"])
timeout_in_seconds = int(arguments["--healthy-timeout"])

print "update-stack: update/create an aws stack"
print "========================================"

cloudformation_conn = boto.cloudformation.connect_to_region(region)

print "connection cloudformation: %s" % cloudformation_conn

try:
    updater = StackUpdater(stack_name, region, timeout_in_seconds=timeout_in_seconds)
    updater.update_stack(arguments["PARAMETER"], template_filename)
    updater.update_asgs()
    exit_code = EXIT_CODE_OK
except Exception as e:
    print "[ERROR] %s" % e
    exit_code = EXIT_CODE_CANNOT_UPDATE_ASGS

sys.exit(exit_code)
